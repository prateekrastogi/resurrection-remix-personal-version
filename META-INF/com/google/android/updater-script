ui_print("Target: Xiaomi/kenzo/kenzo:6.0.1/MMB29M/V8.2.1.0.MHOCNDL:user/release-keys");
ifelse(is_mounted("/system"), unmount("/system"));
package_extract_dir("install", "/tmp/install");
set_metadata_recursive("/tmp/install", "uid", 0, "gid", 0, "dmode", 0755, "fmode", 0644);
set_metadata_recursive("/tmp/install/bin", "uid", 0, "gid", 0, "dmode", 0755, "fmode", 0755);
mount("ext4", "EMMC", "/dev/block/bootdevice/by-name/system", "/system", "");
run_program("/tmp/install/bin/backuptool.sh", "backup");
unmount("/system");
ui_print(" ");
ui_print(" ");
ui_print(" ");
ui_print(" RRRRRRRRRRRRRRRRR     RRRRRRRRRRRRRRRRR   ");
ui_print(" R::::::::::::::::R    R::::::::::::::::R  ");
ui_print(" R::::::RRRRRR:::::R   R::::::RRRRRR:::::R ");
ui_print(" RR:::::R     R:::::R  RR:::::R     R:::::R");
ui_print("   R::::R     R:::::R    R::::R     R:::::R");
ui_print("   R::::R     R:::::R    R::::R     R:::::R");
ui_print("   R::::RRRRRR:::::R     R::::RRRRRR:::::R ");
ui_print("   R:::::::::::::RR      R:::::::::::::RR  ");
ui_print("   R::::RRRRRR:::::R     R::::RRRRRR:::::R ");
ui_print("   R::::R     R:::::R    R::::R     R:::::R");
ui_print("   R::::R     R:::::R    R::::R     R:::::R");
ui_print("   R::::R     R:::::R    R::::R     R:::::R");
ui_print(" RR:::::R     R:::::R  RR:::::R     R:::::R");
ui_print(" R::::::R     R:::::R  R::::::R     R:::::R");
ui_print(" R::::::R     R:::::R  R::::::R     R:::::R");
ui_print(" RRRRRRRR     RRRRRRR  RRRRRRRR     RRRRRRR");
ui_print(" ");
ui_print(" ");
ui_print(" **************** Software *****************");
ui_print(" OS ver: RR-N-v5.8.3-20170611-kenzo-Nightly");
ui_print("");
ui_print(" Android ver: 7.1.2");
ui_print("");
ui_print(" Security patch: 2017-06-05");
ui_print("");
ui_print(" SDK ver: 25");
ui_print("");
ui_print(" Root status: Enabled");
ui_print("");
ui_print(" Build ID: NJH47B");
ui_print("");
ui_print(" Build date: Sun Jun 11 08:39:47 IST 2017");
ui_print("");
ui_print(" Build type: Nightly");
ui_print("");
ui_print(" Build host: buildbot");
ui_print("");
ui_print(" Maintainer: jenkins");
ui_print(" **************** Hardware *****************");
ui_print(" Device codename: kenzo");
ui_print("");
ui_print(" Manufacturer: Xiaomi");
ui_print("");
ui_print(" LCD density: 480");
ui_print("");
ui_print(" *******************************************");
if is_mounted("/data") then
package_extract_file("META-INF/org/lineageos/releasekey", "/tmp/releasekey");
run_program("/tmp/install/bin/otasigcheck.sh") != "31744" || abort("Can't install this package on top of incompatible data. Please try another package or run a factory reset");
else
mount("f2fs", "EMMC", "/dev/block/bootdevice/by-name/userdata", "/data", "");
package_extract_file("META-INF/org/lineageos/releasekey", "/tmp/releasekey");
run_program("/tmp/install/bin/otasigcheck.sh") != "31744" || abort("Can't install this package on top of incompatible data. Please try another package or run a factory reset");
unmount("/data");
endif;
show_progress(0.750000, 0);
ui_print("Patching system image unconditionally...");
block_image_update("/dev/block/bootdevice/by-name/system", package_extract_file("system.transfer.list"), "system.new.dat", "system.patch.dat") ||
  abort("E1001: Failed to update system image.");
show_progress(0.020000, 10);
mount("ext4", "EMMC", "/dev/block/bootdevice/by-name/system", "/system", "");
run_program("/tmp/install/bin/backuptool.sh", "restore");
unmount("/system");
show_progress(0.050000, 5);
package_extract_file("boot.img", "/dev/block/bootdevice/by-name/boot");
ui_print(" ");
ui_print("Flashing Magisk...");
ui_print(" ");
package_extract_dir("magisk", "/tmp/magisk");
run_program("/sbin/busybox", "unzip", "/tmp/magisk/magisk.zip", "META-INF/com/google/android/*", "-d", "/tmp/magisk");
run_program("/sbin/sh", "/tmp/magisk/META-INF/com/google/android/update-binary", "dummy", "1", "/tmp/magisk/magisk.zip");
ui_print(" ");
show_progress(0.200000, 10);
set_progress(1.000000);
